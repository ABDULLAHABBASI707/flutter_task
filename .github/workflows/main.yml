name: "Build & Release"

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Clean project
        run: |
          flutter clean
          rm -rf android/.gradle
          rm -rf build

      - name: Resolve Firebase dependencies
        run: |
          # First remove existing Firebase packages
          sed -i '' "/firebase_core/d" pubspec.yaml
          sed -i '' "/cloud_firestore/d" pubspec.yaml
          sed -i '' "/firebase_auth/d" pubspec.yaml
          
          # Add compatible versions
          echo "  firebase_core: ^2.32.0" >> pubspec.yaml
          echo "  cloud_firestore: ^4.17.5" >> pubspec.yaml
          echo "  firebase_auth: ^4.11.1" >> pubspec.yaml
          
          # Get dependencies
          flutter pub get

      - name: Update Android build tools
        run: |
          sed -i '' "s/com.android.tools.build:gradle:.*/com.android.tools.build:gradle:8.3.0/" android/build.gradle
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-8.4-bin.zip" > android/gradle/wrapper/gradle-wrapper.properties
          sed -i '' "s/ext.kotlin_version = .*/ext.kotlin_version = '1.9.22'/" android/build.gradle

      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: Build iOS IPA
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Distribute Android APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/apk/release/app-arm64-v8a-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "testers" \
            --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Distribute iOS IPA to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/ios/iphoneos/app.ipa \
            --app ${{ secrets.FIREBASE_IOS_APP_ID }} \
            --groups "testers" \
            --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Push artifacts to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/*.apk
            build/ios/iphoneos/app.ipa
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}